
===========================================

textmind should has its' own table class,

==========================================

table for memory, an example for endian
------
| 12 |
------
| 34 |
------
| 56 |
------
| 78 |
------

little endian,
------
| 78 |
------
| 56 |
------
| 34 |
------
| 12 |
------

========================================


***************************************************************************************
*operator	      |		description				|combine way  *
*---------------------+-------------------------------------------------+-------------*
*(), [], ->, .,	      |		bracket(function), array,		|left -> right*
*	 	      |		two struct member access ways		|	      *
*---------------------+-------------------------------------------------+-------------*
*!, ~, ++, --, +, -,  |		negative, bitwise negative, increase,	|left <- right*
**, & (type) sizeof   |  	descrease, signs, indirect, address,    |	      *
*		      |  	type convert, size of a data type       |	      *
*---------------------+-------------------------------------------------+------------ *
**, /, %,	      |  	multiply, divider, mod			|left -> right*
*---------------------+-------------------------------------------------+------------ *
*+, -		      |  	plus sign, minus sign			|left -> right*
*---------------------+-------------------------------------------------+------------ *
*<<, >>		      |  	left shift, right shift			|left -> right*
*---------------------+-------------------------------------------------+------------ *
*<, <=, >=, >	      |  	less than, less or equal to,		|left -> right*
*		      |  	larger or equal to, large than		|	      *
*---------------------+-------------------------------------------------+------------ *
*==, !=		      |  	equal to, not equal to			|left -> right*
*---------------------+-------------------------------------------------+------------ *
*&		      |  	and by bitwise				|left -> right*
*---------------------+-------------------------------------------------+------------ *
*^		      |  	exclusive OR by bitwise			|left -> right*
*---------------------+-------------------------------------------------+------------ *
*|		      |  	or by bitwise				|left -> right*
*---------------------+-------------------------------------------------+------------ *
*&&		      |  	logical and				|left -> right*
*---------------------+-------------------------------------------------+------------ *
*||		      |  	logical or				|left -> right*
*---------------------+-------------------------------------------------+------------ *
*? :		      |  	condition				|left <- right*
*---------------------+-------------------------------------------------+------------ *
*=, +=, -=, *=, /=,   |  	assignment				|left <- right*
*&=, ^=, |=, <<=, >>= |							|	      *
*---------------------+-------------------------------------------------+------------ *
*,		      |		comma(sequence)				|left -> right*
***************************************************************************************

is it a good way to express table?

=============================================

